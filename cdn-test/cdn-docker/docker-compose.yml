version: "3"
services:
  dnsmasq:
    image: dnsmasq:2.85
    build:
      context: .
      dockerfile: ./dns-server/Dockerfile
    container_name: dnsmasq
    volumes:
      - ./dns-server/config/dnsmasq.conf:/etc/dnsmasq.conf:ro
      - ./dns-server/config/example.com.conf:/etc/dnsmasq.d/example.com.conf:ro
      - ./dns-server/config/dnsmasq-user.conf:/usr/dnsmasq/dnsmasq-user.conf
      - ./dns-server/logs:/usr/dnsmasq/logs
    command: [ "dnsmasq", "-k", "--server", "223.5.5.5" ]
    ports:
      - "153:53"
    deploy:
      resources:
        limits:
          memory: 100M
    networks:
      cdn-network:
        ipv4_address: 172.16.238.10

  busybox:
    image: mybusybox
    build:
      context: .
      dockerfile: ./busybox/Dockerfile
    container_name: mybusybox
    command: ["/bin/sh","-c","while true;do echo pod1 >> /root/out.txt; sleep 3; done;"]
    networks:
      - cdn-network
    dns: 172.16.238.10
    depends_on:
      - dnsmasq

  sourceserver:
    image: nginx:latest
    container_name: source-server
    hostname: source-server
    ports:
      - '8080:80'
    volumes:
      - ./sourceserver/nginx.conf:/etc/nginx/nginx.conf
      - ./sourceserver/logs:/var/log/nginx
      - ./sourceserver/imgs:/imgs
    networks:
      cdn-network:
        ipv4_address: 172.16.238.11
    dns: 172.16.238.10
    depends_on:
      - dnsmasq

  edgenode:
    image: nginx:latest
    container_name: edgenode
    hostname: edgenode
    ports:
      - '80:80'
    volumes:
      - ./edgenode/nginx.conf:/etc/nginx/nginx.conf
      - ./edgenode/logs:/var/log/nginx
      - ./edgenode/cache:/cache
    networks:
      cdn-network:
        ipv4_address: 172.16.238.12
    dns: 172.16.238.10
    depends_on:
      - dnsmasq

  testNginx:
    image: nginx:latest
    container_name: testNginx
    hostname: testNginx
    ports:
      - '8081:80'
    volumes:
      - ./testNginx/logs:/var/log/nginx
    networks:
      cdn-network:
        ipv4_address: 172.16.238.13
    dns: 172.16.238.10
    depends_on:
      - dnsmasq

  cdndnsserver:
    build:
      context: ./../
      dockerfile: Dockerfile
      args:
        NO_CACHE: "1"
    container_name: cdndnsserver
    hostname: cdndnsserver
    ports:
      - '1053:53'
    networks:
      cdn-network:
        ipv4_address: 172.16.238.20
    dns: 172.16.238.10
    depends_on:
      - dnsmasq

networks:
  cdn-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24